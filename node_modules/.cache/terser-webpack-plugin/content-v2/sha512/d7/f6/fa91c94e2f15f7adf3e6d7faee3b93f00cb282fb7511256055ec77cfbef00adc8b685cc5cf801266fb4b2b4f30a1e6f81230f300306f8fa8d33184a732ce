{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{272:function(a,t,s){\"use strict\";s.r(t);var n=s(13),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"前言\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前言\"}},[a._v(\"#\")]),a._v(\" 前言\")]),a._v(\" \"),t(\"p\",[t(\"strong\",[a._v(\"TerminalCommand\")]),a._v(\" 使用JVM平台语言编写,本文档在描述的时候会主要以Java语言进行描述和示例演示\"),t(\"br\"),a._v(\" \"),t(\"br\"),a._v(\"\\n文档的内容并不能保证面面俱到，如果你认为某篇章节有缺少的内容或者有可以改进的地方，欢迎通过Issue指正~\")]),a._v(\" \"),t(\"h2\",{attrs:{id:\"简介\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#简介\"}},[a._v(\"#\")]),a._v(\" 简介\")]),a._v(\" \"),t(\"p\",[a._v(\"===\\n\"),t(\"strong\",[a._v(\"TerminalCommand\")]),a._v(\" 框架主要是对于当前,希望开发web后台,但是受制于各种原因所需要的迅捷开发的开发框架\\n\"),t(\"br\")]),a._v(\" \"),t(\"h2\",{attrs:{id:\"免责声明\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#免责声明\"}},[a._v(\"#\")]),a._v(\" 免责声明\")]),a._v(\" \"),t(\"p\",[a._v(\"本框架仅用于交流学习,并于github平台遵照 Apache-2.0 License \"),t(\"a\",{attrs:{href:\"https://github.com/YunHerry/CommandTerminal/blob/master/LICENSE\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t(\"OutboundLink\")],1),a._v(\" 协议开源，\\n\"),t(\"br\"),a._v(\"\\n开源地址：https://github.com/YunHerry/CommandTerminal/\\n\"),t(\"br\"),a._v(\"\\n请使用本框架开发、从事违法犯罪等相关内容，任何使用者如若因使用此框架或其相关框架而发生任何纠纷或损失，开发团队不承担任何责任.\\n\"),t(\"br\"),a._v(\"\\n框架本体开源免费，不收取任何费用，如有遇到有偿提供框架源码者请及时举报.\")]),a._v(\" \"),t(\"h2\",{attrs:{id:\"注意事项\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#注意事项\"}},[a._v(\"#\")]),a._v(\" 注意事项\")]),a._v(\" \"),t(\"p\",[a._v(\"Java version\\n\"),t(\"br\"),a._v(\"\\n目前，在使用框架之前，你首先需要检查一下你的java版本。在命令行输入： java -version 即可查看你的java版本，例如：\")]),a._v(\" \"),t(\"div\",{staticClass:\"language-java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[a._v(\"java version \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"1.8.0_241\"')]),a._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Java\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"TM\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" SE \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Runtime\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Environment\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"build \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"1.8\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\".0_241\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\"b07\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Java\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"HotSpot\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"TM\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"64\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Bit\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Server\")]),a._v(\" VM \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"build \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"25.241\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\"b07\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" mixed mode\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n\")])])]),t(\"p\",[a._v(\"本项目,当前基于Java8开发,请尽量使用Java8 - Java11的版本\\n\"),t(\"br\"),a._v(\"\\n因Java12新增新语法糖,暂不支持.\")]),a._v(\" \"),t(\"h2\",{attrs:{id:\"视频教学\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#视频教学\"}},[a._v(\"#\")]),a._v(\" 视频教学\")]),a._v(\" \"),t(\"p\",[a._v(\"暂无,之后有空就出\")]),a._v(\" \"),t(\"h1\",{attrs:{id:\"快速开始\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#快速开始\"}},[a._v(\"#\")]),a._v(\" 快速开始\")]),a._v(\" \"),t(\"p\",[a._v(\"本章节会提供一些简单的代码示例来介绍如何快速编写一个通用的启动器以及命令类\")]),a._v(\" \"),t(\"h2\",{attrs:{id:\"构建项目\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#构建项目\"}},[a._v(\"#\")]),a._v(\" 构建项目\")]),a._v(\" \"),t(\"p\",[a._v(\"首先,请先构建一个项目(这里以Maven项目为例),不多赘述创建项目的方法,请自行查找.\\n请在Maven项目中的pom.xml添加依赖\")]),a._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v(\"\\n<dependency>\\n  <groupId>io.github.yunherry</groupId>\\n  <artifactId>command-terminal</artifactId>\\n  <version>1.0.0</version>\\n  <type>pom</type>\\n</dependency>\\n\\n\")])])]),t(\"h2\",{attrs:{id:\"启动类的创建\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#启动类的创建\"}},[a._v(\"#\")]),a._v(\" 启动类的创建\")]),a._v(\" \"),t(\"p\",[a._v(\"编写一个程序入口类,并通过indi.yunherry.TerminalApplication.java的静态方法启动TerminalCommand\")]),a._v(\" \"),t(\"div\",{staticClass:\"language-Java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@TerminalCommand\")]),a._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"class\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Test\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"void\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"main\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"String\")]),a._v(\" args\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"final\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"TerminalContext\")]),a._v(\" terminalContext \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"TerminalApplication\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"run\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Test\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"class\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\" \\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\")])])]),t(\"h2\",{attrs:{id:\"命令类的创建\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#命令类的创建\"}},[a._v(\"#\")]),a._v(\" 命令类的创建\")]),a._v(\" \"),t(\"p\",[a._v(\"如果想要创建命令类,你可以实现@Command,或者继承Command类,下面使用一个测试类实例进行展示。\")]),a._v(\" \"),t(\"div\",{staticClass:\"language-Java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Commmand\")]),a._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"class\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"TestCommand\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"void\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"test\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\")])])]),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v('输入命令: \"/test\"\\n输出: ...\\n')])])]),t(\"h3\",{attrs:{id:\"方法注解\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#方法注解\"}},[a._v(\"#\")]),a._v(\" 方法注解\")]),a._v(\" \"),t(\"p\",[a._v(\"命令类的方法不返回数据,并且一个命令的执行周期是:输入命令->解析命令->执行命令->重新执行整个流程.\"),t(\"br\"),a._v(\"\\n假设你有两个方法,并且他们的名称、方法参数数量相同,则我们将会认为他是同一个方法,并且抛出异常,如果你想将方法名称进行改变\"),t(\"br\"),a._v(\"\\n我们应当使用@MethodName注解,他将会代替方法原本的名称,注入方法容器之中,你也可以对传入参数进行注解,使其拥有默认值\"),t(\"br\"),a._v(\"\\n这里统一使用一个栗子进行展示.\")]),a._v(\" \"),t(\"div\",{staticClass:\"language-Java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Commmand\")]),a._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"class\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"TestCommand\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@MethodName\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"MethodName\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"test1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"void\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"test\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@DefaultValue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"yun\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"String\")]),a._v(\" va\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"System\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"out\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"println\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"va\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\")])])]),t(\"p\",[a._v(\"当你这样写的时候,你可以执行:\"),t(\"br\")]),a._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v(\"/test1 -va\\n返回: yun\\n\")])])]),t(\"p\",[a._v(\"但是,如果你为va属性赋值,则:\")]),a._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v(\"/test1 -va=hello world!\\n返回: hello world!\\n\")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}